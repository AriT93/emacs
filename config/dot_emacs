;;; .emacs --- Summary
;; my emacs file
;;; Commentary:
;;; Code:

(add-to-list 'load-path (expand-file-name "~/emacs/config/"))

(require 'emacs-config-new)
(exec-path-from-shell-initialize)
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(ansi-color-faces-vector
   [default default default italic underline success warning error])
 '(canlock-password "d5cb9c8314934efac69b0aae0c3236988d0c9852")
 '(column-number-mode t)
 '(company-backends
   '(company-bbdb company-semantic company-clang company-cmake
                  company-capf company-files
                  (company-dabbrev-code company-gtags company-etags
                                        company-keywords)
                  company-dabbrev))
 '(company-quickhelp-mode t)
 '(company-quickhelp-use-propertized-text t)
 '(connection-local-criteria-alist
   '(((:application eshell) eshell-connection-default-profile)
     ((:application tramp :machine "localhost")
      tramp-connection-local-darwin-ps-profile)
     ((:application tramp :machine "C02X424WJG5M")
      tramp-connection-local-darwin-ps-profile)
     ((:application tramp)
      tramp-connection-local-default-system-profile
      tramp-connection-local-default-shell-profile)))
 '(connection-local-profile-alist
   '((eshell-connection-default-profile (eshell-path-env-list))
     (tramp-connection-local-darwin-ps-profile
      (tramp-process-attributes-ps-args "-acxww" "-o"
                                        "pid,uid,user,gid,comm=abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
                                        "-o" "state=abcde" "-o"
                                        "ppid,pgid,sess,tty,tpgid,minflt,majflt,time,pri,nice,vsz,rss,etime,pcpu,pmem,args")
      (tramp-process-attributes-ps-format (pid . number)
                                          (euid . number)
                                          (user . string)
                                          (egid . number) (comm . 52)
                                          (state . 5) (ppid . number)
                                          (pgrp . number)
                                          (sess . number)
                                          (ttname . string)
                                          (tpgid . number)
                                          (minflt . number)
                                          (majflt . number)
                                          (time . tramp-ps-time)
                                          (pri . number)
                                          (nice . number)
                                          (vsize . number)
                                          (rss . number)
                                          (etime . tramp-ps-time)
                                          (pcpu . number)
                                          (pmem . number) (args)))
     (tramp-connection-local-busybox-ps-profile
      (tramp-process-attributes-ps-args "-o"
                                        "pid,user,group,comm=abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
                                        "-o" "stat=abcde" "-o"
                                        "ppid,pgid,tty,time,nice,etime,args")
      (tramp-process-attributes-ps-format (pid . number)
                                          (user . string)
                                          (group . string) (comm . 52)
                                          (state . 5) (ppid . number)
                                          (pgrp . number)
                                          (ttname . string)
                                          (time . tramp-ps-time)
                                          (nice . number)
                                          (etime . tramp-ps-time)
                                          (args)))
     (tramp-connection-local-bsd-ps-profile
      (tramp-process-attributes-ps-args "-acxww" "-o"
                                        "pid,euid,user,egid,egroup,comm=abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
                                        "-o"
                                        "state,ppid,pgid,sid,tty,tpgid,minflt,majflt,time,pri,nice,vsz,rss,etimes,pcpu,pmem,args")
      (tramp-process-attributes-ps-format (pid . number)
                                          (euid . number)
                                          (user . string)
                                          (egid . number)
                                          (group . string) (comm . 52)
                                          (state . string)
                                          (ppid . number)
                                          (pgrp . number)
                                          (sess . number)
                                          (ttname . string)
                                          (tpgid . number)
                                          (minflt . number)
                                          (majflt . number)
                                          (time . tramp-ps-time)
                                          (pri . number)
                                          (nice . number)
                                          (vsize . number)
                                          (rss . number)
                                          (etime . number)
                                          (pcpu . number)
                                          (pmem . number) (args)))
     (tramp-connection-local-default-shell-profile
      (shell-file-name . "/bin/sh") (shell-command-switch . "-c"))
     (tramp-connection-local-default-system-profile
      (path-separator . ":") (null-device . "/dev/null"))))
 '(counsel-ag-base-command '("/opt/homebrew/bin/ag" "--vimgrep" "%s"))
 '(counsel-projectile-switch-project-action
   '(4
     ("o" counsel-projectile-switch-project-action
      "jump to a project buffer or file")
     ("f" counsel-projectile-switch-project-action-find-file
      "jump to a project file")
     ("d" counsel-projectile-switch-project-action-find-dir
      "jump to a project directory")
     ("D" counsel-projectile-switch-project-action-dired
      "open project in dired")
     ("b" counsel-projectile-switch-project-action-switch-to-buffer
      "jump to a project buffer")
     ("m" counsel-projectile-switch-project-action-find-file-manually
      "find file manually from project root")
     ("S" counsel-projectile-switch-project-action-save-all-buffers
      "save all project buffers")
     ("k" counsel-projectile-switch-project-action-kill-buffers
      "kill all project buffers")
     ("K"
      counsel-projectile-switch-project-action-remove-known-project
      "remove project from known projects")
     ("c" counsel-projectile-switch-project-action-compile
      "run project compilation command")
     ("C" counsel-projectile-switch-project-action-configure
      "run project configure command")
     ("E" counsel-projectile-switch-project-action-edit-dir-locals
      "edit project dir-locals")
     ("v" counsel-projectile-switch-project-action-vc
      "open project in vc-dir / magit / monky")
     ("sg" counsel-projectile-switch-project-action-grep
      "search project with grep")
     ("si" counsel-projectile-switch-project-action-git-grep
      "search project with git grep")
     ("ss" counsel-projectile-switch-project-action-ag
      "search project with ag")
     ("sr" counsel-projectile-switch-project-action-rg
      "search project with rg")
     ("xs" counsel-projectile-switch-project-action-run-shell
      "invoke shell from project root")
     ("xe" counsel-projectile-switch-project-action-run-eshell
      "invoke eshell from project root")
     ("xt" counsel-projectile-switch-project-action-run-term
      "invoke term from project root")
     ("Oc" counsel-projectile-switch-project-action-org-capture
      "capture into project")
     ("Oa" counsel-projectile-switch-project-action-org-agenda
      "open project agenda")))
 '(custom-safe-themes
   '("9fb561389e5ac5b9ead13a24fb4c2a3544910f67f12cfcfe77b75f36248017d0"
     "81f53ee9ddd3f8559f94c127c9327d578e264c574cda7c6d9daddaec226f87bb"
     "7c28419e963b04bf7ad14f3d8f6655c078de75e4944843ef9522dbecfcd8717d"
     "fc48cc3bb3c90f7761adf65858921ba3aedba1b223755b5924398c666e78af8b"
     "6c4c97a17fc7b6c8127df77252b2d694b74e917bab167e7d3b53c769a6abb6d6"
     "f6665ce2f7f56c5ed5d91ed5e7f6acb66ce44d0ef4acfaa3a42c7cfe9e9a9013"
     "b77a00d5be78f21e46c80ce450e5821bdc4368abf4ffe2b77c5a66de1b648f10"
     "7a7b1d475b42c1a0b61f3b1d1225dd249ffa1abb1b7f726aec59ac7ca3bf4dae"
     "b9e9ba5aeedcc5ba8be99f1cc9301f6679912910ff92fdf7980929c2fc83ab4d"
     "84d2f9eeb3f82d619ca4bfffe5f157282f4779732f48a5ac1484d94d5ff5b279"
     "51ec7bfa54adf5fff5d466248ea6431097f5a18224788d0bd7eb1257a4f7b773"
     "bf4b3dbc59b2b0873bd74ebf8f3a8c13d70dc3d36a4724b27edb1e427f047c1e"
     "b89a4f5916c29a235d0600ad5a0849b1c50fab16c2c518e1d98f0412367e7f97"
     "2d40e8de2c676ec749cf13a0a48e35a8b678a056dc397ffe8de4424dfa69d460"
     "378d52c38b53af751b50c0eba301718a479d7feea5f5ba912d66d7fe9ed64c8f"
     "5d09b4ad5649fea40249dd937eaaa8f8a229db1cec9a1a0ef0de3ccf63523014"
     "f2c35f8562f6a1e5b3f4c543d5ff8f24100fae1da29aeb1864bbc17758f52b70"
     "76bfa9318742342233d8b0b42e824130b3a50dcc732866ff8e47366aed69de11"
     "4bca89c1004e24981c840d3a32755bf859a6910c65b829d944n1814000cf6c3d0"
     "711efe8b1233f2cf52f338fd7f15ce11c836d0b6240a18fffffc2cbd5bfe61b0"
     "bf387180109d222aee6bb089db48ed38403a1e330c9ec69fe1f52460a8936b66"
     "e6ff132edb1bfa0645e2ba032c44ce94a3bd3c15e3929cdf6c049802cf059a2a"
     "990e24b406787568c592db2b853aa65ecc2dcd08146c0d22293259d400174e37"
     "f10e50d86ec09152a03fcc3b251ba698610b2e5baa73699297a8bb37a419f3c8"
     "6b80b5b0762a814c62ce858e9d72745a05dd5fc66f821a1c5023b4f2a76bc910"
     "834cbeacb6837f3ddca4a1a7b19b1af3834f36a701e8b15b628cad3d85c970ff"
     "c7eb06356fd16a1f552cfc40d900fe7326ae17ae7578f0ef5ba1edd4fdd09e58"
     "82360e5f96244ce8cc6e765eeebe7788c2c5f3aeb96c1a765629c5c7937c0b5b"
     "5383ee4857a6fc48d27f6a064a4cc07d1dbef566b68edd91a4ec910e702edb70"
     "bffa9739ce0752a37d9b1eee78fc00ba159748f50dc328af4be661484848e476"
     "68bf77811b94a9d877f9c974c19bafe5b67b53ed82baf96db79518564177c0fb"
     "155a5de9192c2f6d53efcc9c554892a0d87d87f99ad8cc14b330f4f4be204445"
     "f061b6bdcf3e9d82dad9fd79458125b3c477d399e87d2027083b7e3ecd6f4dad"
     "1d2f406a342499f0098f9388b87d05ec9b28ccb12ca548f4f5fa80ae368235b6"
     "efefb69e7781fcfe62f3d0b573701f56e45e29afbe9e378a422025fd767ea246"
     "6b2636879127bf6124ce541b1b2824800afc49c6ccd65439d6eb987dbf200c36"
     "add1f25df72a6faa9c87840e33b1890b117f72829d993d5d47393c0bf9f16a22"
     "e297f54d0dc0575a9271bb0b64dad2c05cff50b510a518f5144925f627bb5832"
     "bcc6775934c9adf5f3bd1f428326ce0dcd34d743a92df48c128e6438b815b44f"
     "3c83b3676d796422704082049fc38b6966bcad960f896669dfc21a7a37a748fa"
     "8aebf25556399b58091e533e455dd50a6a9cba958cc4ebb0aab175863c25b9a4"
     "a8245b7cc985a0610d71f9852e9f2767ad1b852c2bdea6f4aadc12cce9c4d6d0"
     "b9cbfb43711effa2e0a7fbc99d5e7522d8d8c1c151a3194a4b176ec17c9a8215"
     default))
 '(mu4e-mu-binary "/opt/homebrew/bin/mu")
 '(package-selected-packages
   '(0blayout a ace-jump-mode adaptive-wrap ag all-the-icons-completion
              all-the-icons-dired all-the-icons-gnus
              all-the-icons-ibuffer all-the-icons-ivy
              all-the-icons-ivy-rich ample-zen-theme auctex autotest
              beacon blamer boxquote citeproc-org coffee-mode
              color-theme-cobalt company-box company-inf-ruby
              company-posframe company-prescient company-quickhelp
              consult-lsp copilot copilot-chat counsel-projectile
              csv-mode cyberpunk-theme darcula-theme darktooth-theme
              dash-at-point deft diminish discover dockerfile-mode
              doom-modeline doom-themes ef-themes eglot elfeed-goodies
              elfeed-org elfeed-webkit elpher embark-consult
              emmet-mode emojify epc erc-hl-nicks erc-image
              excorporate exec-path-from-shell feature-mode flx
              flycheck-grammalecte flycheck-grammarly flycheck-jest
              flymake-ruby fullframe fzf geiser general ghub gist git
              git-gutter-fringe git-gutter-fringe+ git-timemachine
              go-mode goto-chg gptel graphql grip-mode haml-mode
              hc-zenburn-theme helpful highline hlinum hmac iedit
              inflections info-colors ivy-posframe ivy-prescient
              jenkinsfile-mode jest jiralib2 js-comint json-mode
              json-reformat json-rpc-server leetcode leuven-theme
              linum-relative lsp-ivy lsp-java lsp-ui magit-delta
              marginalia mastodon minions modus-operandi-theme
              monokai-pro-theme mu4e-alert mu4e-views multiple-cursors
              nerd-icons-completion nerd-icons-ivy-rich nimbus-theme
              nnreddit no-littering noflet nvm oauth ob-chatgpt-shell
              ob-cypher ob-graphql ob-sql-mode ob-typescript
              oer-reveal olivetti orderless org-ai org-bullets
              org-contrib org-mime org-modern org-noter-pdftools
              org-re-reveal-citeproc org-re-reveal-ref
              org-ref-prettify org-roam-ui org-super-agenda
              org-variable-pitch org-web-tools orgalist orglink
              ox-jira ox-reveal ox-slack ox-twbs panda-theme pepita
              persistent-scratch pinentry plantuml-mode popper
              popup-kill-ring prettier-js pretty-mode pretty-mode-plus
              projectile-extras projectile-ripgrep puppet-mode
              quelpa-use-package rainbow-delimiters rainbow-mode rake
              rbenv realgud-pry rego-mode restart-emacs rg rjsx-mode
              rspec-mode rubocopfmt ruby-electric ruby-tools rufo
              seeing-is-believing sicp smart-mode-line smartscan
              solarized-theme spaceline-all-the-icons spacemacs-theme
              spacious-padding sqlite sqlite3 stylus-mode svg-tag-mode
              taxy-magit-section telephone-line terraform-mode
              transient-cycles tree-mode tree-sitter-indent
              tree-sitter-langs treemacs-all-the-icons treemacs-magit
              treemacs-projectile twittering-mode undo-tree vertico
              visual-fill visual-fill-column vscode-dark-plus-theme
              vterm web-mode which-key-posframe xwwp-follow-link-ivy
              yaml-mode yasnippet-snippets zen-mode zenburn-theme))
 '(plantuml-jar-path
   "/opt/homebrew/Cellar/plantuml/1.2024.8/libexec/plantuml.jar"))

(setq mac-command-modifier 'meta)
(setq mac-option-modifier 'super)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; extension to mode mapping
;
(setq auto-mode-alist
      (append '(
                ("\\.s?html?\\'" . web-mode)
                ("\\.rb$" . ruby-mode)
                ("\\.go$" . go-mode)
                ("\\.css$" . css-mode)
                ("\\.asp$" . web-mode)
                ("\\.aspx$" . web-mode)
                ("\\.ascx$" . web-mode)
                ("\\.html$" . web-mode)
                ("\\.htm$" . web-mode)
                ("\\.txt$" . text-mode)
                ("\\.cs$" . csharp-mode)
                ("\\.fo$" . xsl-mode)
                ("\\.xsl$" . xsl-mode)
                ("\\.xml$" . nxml-mode)
                ("\\.config$" . nxml-mode)
                ("\\.build$". nxml-mode)
                ("\\.xmap$" . sgml-mode)
                ("\\.xconf$" . sgml-mode)
                ("\\.py$" . python-mode)
                ("\\.java$" . java-mode)
                ("\\.jsp$" . web-mode)
                ("\\.org$" . org-mode)
                ("\\.sqp$" . sqlplus-mode)
                ("\\.bat$" . cmd-mode)
                ("\\.js$" . rjsx-mode)
                ("\\.yaml$" . yaml-mode)
                ("\\.scala$" . scala-mode)
                ("\\.graphql" . graphql-mode)
                ("\\.md$" . markdown-mode)
                ("\\.yml$" . yaml-mode)
                ) auto-mode-alist ))

(put 'dired-find-alternate-file 'disabled nil)
(put 'narrow-to-region 'disabled nil)

(put 'downcase-region 'disabled nil)
(org-agenda nil "n")

;; (custom-set-faces
;;  ;; custom-set-faces was added by Custom.
;;  ;; If you edit it by hand, you could mess it up, so be careful.
;;  ;; Your init file should contain only one such instance.
;;  ;; If there is more than one, they won't work right.
;;  '(default ((t (:inherit nil :extend nil :stipple nil :inverse-video nil :box nil :strike-through nil :overline nil :underline nil :slant normal :weight light :height 160 :width normal :foundry "microsoft" :family "Cascadia Code"))))
;;  '(aw-leading-char-face ((t (:height 3.0 :foreground "dodgerblue"))))
;;  '(blamer-face ((t :foreground "PaleGreen2" :height 180 :italic t )))
;;  '(font-lock-comment-face ((t (:inherit modus-themes-slant :foreground "PaleGreen4" :slant italic))))
;;  '(fringe ((t :background "#070018")))
;;  '(header-line ((t :box (:line-width 4 :color "#1d1a26" :style nil))))
;;  '(header-line-highlight ((t :box (:color "#d0d0d0"))))
;;  '(highlight ((t (:background "gray40"))))
;;  '(ivy-current-match ((t (:backgroun "gray40" :height 180 :family "Cascadia Code"))))
;;  '(ivy-minibuffer-match-face-2 ((t (:height 180 :family "Cascadia Code" :underline t))))
;;  '(keycast-key ((t)))
;;  '(line-number ((t nil)))
;;  '(line-number-current-line ((t (:foreground "PaleGreen2"))))
;;  '(org-block ((t (:inherit default :extend t :background "gray15" :weight light :height 160 :family "Cascadia Code"))))
;;  '(org-block-begin-line ((t (:background "gray40" :family "Cascadia Code" :italic t))))
;;  '(org-variable-pitch-fixed-face ((t (:inherit org-block :extend t :family "Cascadia Code"))))
;;  '(tab-bar-tab ((t :box (:line-width 4 :color "#070019" :style nil))))
;;  '(tab-bar-tab-inactive ((t :box (:line-width 4 :color "#4a4759" :style nil))))
;;  '(variable-pitch ((t (:weight light :height 160 :family "Helvetica")))))
(message ".emacs loaded")

(put 'upcase-region 'disabled nil)
(exec-path-from-shell-initialize)
(provide '.emacs)
;;; .emacs ends here
