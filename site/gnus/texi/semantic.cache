;; Object semantic.cache
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semantic.cache"
  :tables (list 
   (semanticdb-table "Makefile"
    :major-mode 'makefile-mode
    :tags '(("infodir" variable (:default-value (("$(prefix)/info"))) nil [1 26]) ("prefix" variable (:default-value (("/usr"))) nil [26 40]) ("srcdir" variable (:default-value (("."))) nil [40 51]) ("subdir" variable (:default-value (("texi"))) nil [51 65]) ("top_srcdir" variable (:default-value ((".."))) nil [65 81]) ("TEXI2DVI" variable (:default-value (("texi2dvi"))) nil [83 101]) ("TEXI2PDF" variable (:default-value (("texi2pdf"))) nil [101 119]) ("MAKEINFO" variable (:default-value (("makeinfo"))) nil [119 137]) ("EMACS" variable (:default-value (("emacs"))) nil [137 149]) ("EMACSCOMP" variable (:default-value (("$(EMACS)") ("-batch") ("-q") ("-no-site-file"))) nil [149 192]) ("EMACSINFO" variable (:default-value (("$(EMACSCOMP)") ("-l") ("$(srcdir)/infohack.el") ("-f") ("batch-makeinfo"))) nil [192 258]) ("PDFLATEX" variable (:default-value (("pdflatex"))) nil [258 276]) ("LATEX" variable (:default-value (("/cygdrive/c/texmf/miktex/bin/latex"))) nil [276 317]) ("DVIPS" variable (:default-value (("dvips"))) nil [317 329]) ("INSTALL" variable (:default-value (("/usr/bin/install") ("-c"))) nil [329 359]) ("INSTALL_DATA" variable (:default-value (("${INSTALL}") ("-m") ("644"))) nil [359 392]) ("SHELL" variable (:default-value (("/bin/sh"))) nil [392 408]) ("PAPERTYPE" variable (:default-value (("a4"))) nil [408 421]) ("INFO_DEPS" variable (:default-value (("gnus") ("message") ("emacs-mime") ("sieve") ("pgg"))) nil [421 465]) ("all" function (:arguments (("$(INFO_DEPS)"))) nil [466 485]) ("most" function (:arguments (("texi2latex.elc") ("latex") ("latexps"))) nil [485 521]) (".SUFFIXES" function (:arguments ((".texi") (".dvi") (".ps") (".pdf") (".latexi") (".dvi-x") (".pdf-x"))) nil [521 575]) (".texi" function (:arguments (nil)) nil [575 714]) ("dvi" function (:arguments (("gnus.dvi") ("message.dvi") ("refcard.dvi") ("emacs-mime.dvi") ("sieve.dvi") ("pgg.dvi"))) nil [714 786]) ("pdf" function (:arguments (("gnus.pdf") ("message.pdf") ("refcard.pdf") ("emacs-mime.pdf") ("sieve.pdf") ("pgg.pdf"))) nil [786 858]) (".texi.dvi" function (:arguments (nil)) nil [858 1006]) (".dvi.ps" function (:arguments (nil)) nil [1006 1073]) (".texi.pdf" function (:arguments (nil)) nil [1073 1221]) ("refcard.dvi" function (:arguments (("refcard.tex") ("gnuslogo-refcard.eps") ("gnusref.tex"))) nil [1221 1334]) ("refcard.pdf" function (:arguments (("refcard.tex") ("gnuslogo-refcard.eps") ("gnusref.tex"))) nil [1334 1522]) ("booklet.dvi" function (:arguments (("booklet.tex") ("gnuslogo-refcard.eps") ("gnusref.tex"))) nil [1522 1805]) ("booklet.pdf" function (:arguments (("booklet.tex") ("gnuslogo-refcard.eps") ("gnusref.tex"))) nil [1805 2165]) ("clean" function (:arguments (nil)) nil [2165 2545]) ("makeinfo" function (:arguments (nil)) nil [2545 2618]) ("texi2latex.elc" function (:arguments (("texi2latex.el"))) nil [2618 2777]) ("latex" function (:arguments (("gnus.latexi") ("gnus-faq.latexi") ("message.latexi") ("emacs-mime.latexi") ("sieve.latexi") ("pgg.latexi"))) nil [2777 2870]) ("gnus.latexi" function (:arguments (("$(srcdir)/gnus.texi") ("$(srcdir)/gnus-faq.texi") ("$(srcdir)/message.texi") ("$(srcdir)/emacs-mime.texi") ("$(srcdir)/sieve.texi") ("$(srcdir)/pgg.texi") ("texi2latex.elc"))) nil [2870 3176]) ("gnus-faq.latexi" function (:arguments (("$(srcdir)/gnus.texi") ("$(srcdir)/gnus-faq.texi") ("$(srcdir)/message.texi") ("$(srcdir)/emacs-mime.texi") ("$(srcdir)/sieve.texi") ("$(srcdir)/pgg.texi") ("texi2latex.elc"))) nil [2870 3176]) (".latexi.dvi-x" function (:arguments (nil)) nil [3176 3775]) (".latexi.pdf-x" function (:arguments (nil)) nil [3775 4421]) ("latexps" function (:arguments (("gnus.dvi-x"))) nil [4421 4493]) ("latexpdf" function (:arguments (("gnus.pdf-x"))) nil [4493 4539]) ("gnus-manual-a4.latexi" function (:arguments (("gnus.latexi"))) nil [4539 4585]) ("gnus-manual-standard.latexi" function (:arguments (("gnus.latexi"))) nil [4585 4667]) ("gnus-manual-a4.ps.gz" function (:arguments (("gnus-manual-a4.dvi-x"))) nil [4667 4767]) ("gnus-manual-standard.ps.gz" function (:arguments (("gnus-manual-standard.dvi-x"))) nil [4767 4883]) ("pdfs" function (:arguments (("gnus-manual-a4.pdf-x") ("gnus-manual-standard.pdf-x"))) nil [4883 5038]) ("pss" function (:arguments (("latexps"))) nil [5038 5052]) ("complete" function (:arguments (("pss"))) nil [5052 5067]) ("psout" function (:arguments (("latexboth") ("out"))) nil [5067 5089]) ("latexboth" function (:arguments (("gnus-manual-a4.ps.gz") ("gnus-manual-standard.ps.gz"))) nil [5089 5149]) ("out" function (:arguments (nil)) nil [5149 5229]) ("veryclean" function (:arguments (("clean"))) nil [5229 5333]) ("distclean" function (:arguments (("veryclean"))) nil [5333 5483]) ("install" function (:arguments (("$(INFO_DEPS)"))) nil [5483 6166]) ("uninstall" function (:arguments (nil)) nil [6166 6674]) ("tmps" function (:arguments (nil)) nil [6674 7264]) ("pspackage" function (:arguments (nil)) nil [7255 7463]) ("Makefile" function (:arguments (("$(srcdir)/Makefile.in") ("../config.status"))) nil [7463 7595]) ("gnusconfig.tex" function (:arguments (("$(srcdir)/gnusconfig.tex.in") ("../config.status"))) nil [7595 7739]))
    :file "Makefile"
    :pointmax 7883
    :unmatched-syntax '((punctuation 7881 . 7882) (symbol 7872 . 7881))
    )
   )
  :file "semantic.cache"
  :semantic-tag-version "2.0beta1"
  :semanticdb-version "2.0beta1"
  )
