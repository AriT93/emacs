;; Object lisp/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "lisp/"
  :tables (list 
   (semanticdb-table "start-opt.el"
    :major-mode 'emacs-lisp-mode
    :tags '(("and" code nil nil [7077 7143]) ("chistory" include nil nil [7160 7179]) ("header2" include nil nil [7204 7228]) ("misc-cmds" include nil nil [7274 7300]) ("wimpy-del" include nil nil [7357 7383]) ("setup-keys" include nil nil [7430 7457]) ("misc-fns" include nil nil [7617 7642]) ("faces+" include nil nil [7736 7759]) ("frame-cmds" include nil nil [7878 7905]) ("autofit-frame" include nil nil [7947 7977]) ("condition-case" code nil nil [8123 8692]) ("global-font-lock-mode" code nil nil [8694 8719]) ("setq" code nil nil [8771 8801]) ("setq" code nil nil [8853 8889]) ("unless" code nil nil [8921 8995]) ("set-face-foreground" code nil nil [8996 9051]) ("unless" code nil nil [9052 9130]) ("set-face-foreground" code nil nil [9131 9193]) ("unless" code nil nil [9194 9270]) ("set-face-foreground" code nil nil [9271 9325]) ("unless" code nil nil [9326 9414]) ("set-face-foreground" code nil nil [9415 9472]) ("unless" code nil nil [9473 9549]) ("set-face-foreground" code nil nil [9550 9603]) ("eval-after-load" code nil nil [10093 12659]) ("when" code nil nil [13112 13161]) ("eval-after-load" code nil nil [13578 13671]) ("setq" code nil nil [13741 13785]) ("copy-face" code nil nil [13817 13864]) ("setq" code nil nil [13897 13929]) ("if" code nil nil [13964 14236]) ("setq" code nil nil [14237 14262]) ("setq-default" code nil nil [14304 14339]) ("setq" code nil nil [14369 14396]) ("put" code nil nil [14438 14529]) ("setq" code nil nil [14530 14564]) ("put" code nil nil [14599 14704]) ("when" code nil nil [14705 14828]) ("when" code nil nil [14903 15003]) ("when" code nil nil [15409 15533]) ("and" code nil nil [15722 15804]) ("eval-after-load" code nil nil [15844 15900]) ("eval-after-load" code nil nil [16551 16641]) ("setq" code nil nil [17005 17028]) ("setq" code nil nil [17068 17099]) ("setq" code nil nil [17131 17163]) ("put" code nil nil [17196 17307]) ("setq-default" code nil nil [17653 17688]) ("setq" code nil nil [17728 17774]) ("put" code nil nil [17800 17936]) ("setq" code nil nil [18045 18181]) ("put" code nil nil [18182 18307]) ("when" code nil nil [18475 19335]) ("setq" code nil nil [19350 19395]) ("setq" code nil nil [19396 20198]) ("add-hook" code nil nil [20200 20250]) ("add-hook" code nil nil [20291 20338]) ("add-hook" code nil nil [20339 20387]) ("add-hook" code nil nil [20408 20460]) ("add-hook" code nil nil [20481 20527]) ("add-hook" code nil nil [20548 20597]) ("when" code nil nil [20619 20793]) ("setq" code nil nil [20824 20878]) ("eval-after-load" code nil nil [20938 21085]) ("setq" code nil nil [24412 24448]) ("add-hook" code nil nil [24492 24908]) ("when" code nil nil [25247 25437]) ("when" code nil nil [25645 25930]) ("when" code nil nil [26560 26815]) ("when" code nil nil [26816 27089]) ("when" code nil nil [27090 27378]) ("when" code nil nil [27379 27749]) ("when" code nil nil [27765 27923]) ("when" code nil nil [28217 28501]) ("when" code nil nil [28699 29264]) ("add-hook" code nil nil [29266 29341]) ("add-hook" code nil nil [29343 29400]) ("add-hook" code nil nil [29401 29458]) ("add-hook" code nil nil [29459 29516]) ("add-hook" code nil nil [29517 29574]) ("add-hook" code nil nil [29575 29632]) ("add-hook" code nil nil [29633 29690]) ("add-hook" code nil nil [29691 29748]) ("add-hook" code nil nil [29749 29806]) ("add-hook" code nil nil [29807 29864]) ("add-hook" code nil nil [29865 29922]) ("add-hook" code nil nil [29923 29980]) ("add-hook" code nil nil [29981 30038]) ("add-hook" code nil nil [30039 30103]) ("add-hook" code nil nil [30104 30161]) ("add-hook" code nil nil [30162 30219]) ("start-opt" package nil nil [31166 31186]))
    :file "start-opt.el"
    :pointmax 31285
    :unmatched-syntax 'nil
    )
   (semanticdb-table "twitter.el"
    :major-mode 'emacs-lisp-mode
    :tags '(("json" include nil nil [779 794]) ("twitter-usernamepassword-history" variable nil nil [796 841]) ("twitter" function (:arguments ("msg" "usernamepassword" "&optional" "imagename")) nil [843 1985]) ("twitter-ask" function nil nil [1987 2259]))
    :file "twitter.el"
    :pointmax 2266
    )
   )
  :file "semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.0"
  )
